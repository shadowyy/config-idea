<application>
  <component name="AppStorage">
    <histories>
      <item value="An annotation on a constructor that shows how the parameters of that constructor correspond to the constructed object's getter methods. For example:" />
      <item value="execute" />
      <item value="whatever size you want to read in at a time" />
      <item value="pharse" />
      <item value="// default name of the CAS attribute for remember me authentication (CAS 3.4.10+)" />
      <item value="* This realm implementation acts as a CAS client to a CAS server for authentication and basic authorization. * &lt;p/&gt; * This realm functions by inspecting a submitted {@link org.apache.shiro.cas.CasToken CasToken} (which essentially * wraps a CAS service ticket) and validates it against the CAS server using a configured CAS * {@link org.jasig.cas.client.validation.TicketValidator TicketValidator}. * &lt;p/&gt; * The {@link #getValidationProtocol() validationProtocol} is {@code CAS} by default, which indicates that a * a {@link org.jasig.cas.client.validation.Cas20ServiceTicketValidator Cas20ServiceTicketValidator} * will be used for ticket validation. You can alternatively set * or {@link org.jasig.cas.client.validation.Saml11TicketValidator Saml11TicketValidator} of CAS client. It is based on * {@link AuthorizingRealm AuthorizingRealm} for both authentication and authorization. User id and attributes are retrieved from the CAS * service ticket validation response during authentication phase. Roles and permissions are computed during authorization phase (according * to the attributes previously retrieved). * * @since 1.2 * @see &lt;a href=&quot;https://github.com/bujiio/buji-pac4j&quot;&gt;buji-pac4j&lt;/a&gt; * @deprecated replaced with Shiro integration in &lt;a href=&quot;https://github.com/bujiio/buji-pac4j&quot;&gt;buji-pac4j&lt;/a&gt;." />
      <item value="Interface used to indicate that a bean should &lt;em&gt;run&lt;/em&gt; when it is contained within * a {@link SpringApplication}. Multiple {@link CommandLineRunner} beans can be defined * within the same application context and can be ordered using the {@link Ordered} * interface or {@link Order @Order} annotation. * &lt;p&gt; * If you need access to {@link ApplicationArguments} instead of the raw String array * consider using {@link ApplicationRunner}." />
      <item value="* &lt;p&gt;Splits a String by Character type as returned by * {@code java.lang.Character.getType(char)}. Groups of contiguous * characters of the same type are returned as complete tokens, with the * following exception: the character of type * {@code Character.UPPERCASE_LETTER}, if any, immediately * preceding a token of type {@code Character.LOWERCASE_LETTER} * will belong to the following token rather than to the preceding, if any, * {@code Character.UPPERCASE_LETTER} token." />
      <item value="selecte" />
      <item value="job name" />
      <item value="Represents a version number plus the further qualifiers and build info. This is * mostly used for representing a FreeMarker version number, but should also be able * to parse the version strings of 3rd party libraries. * *" />
      <item value="re Send" />
      <item value="* Set whether to validate all addresses which get passed to this helper. * Default is &quot;false&quot;. * &lt;p&gt;Note that this is by default just available for JavaMail &gt;= 1.3. * You can override the default {@code validateAddress method} for * validation on older JavaMail ve" />
      <item value="* A Configuration object for customize default settings. If {@link #configLocation} * is specified, this property is not used." />
      <item value="* Execution mode for {@link org.mybatis.spring.SqlSessionTemplate}." />
      <item value="* Indicates whether perform presence check of the MyBatis xml config file." />
      <item value="报表" />
      <item value="索引" />
      <item value="sent" />
      <item value="sent email" />
      <item value="已发邮件" />
      <item value="send mail" />
      <item value="timing" />
      <item value="定时" />
      <item value="收件人群组" />
      <item value="模版" />
      <item value="抄送" />
      <item value="收件人" />
      <item value="抄送人" />
      <item value="引号" />
      <item value="followed by `|` from the line." />
      <item value="Strip a leading prefix consisting of blanks or control characters" />
      <item value="For every line in this string:" />
      <item value="** For every line in this string: * * Strip a leading prefix consisting of blanks or control characters * followed by `|` from the line." />
      <item value="可以在方法名后面加一个空格和下划线" />
      <item value="省略了吧" />
      <item value="其实这也是个匿名函数" />
      <item value="显示地告诉编译器这是个函数" />
      <item value="方法转函数" />
      <item value="* Returns the minimal range which {@linkplain Range#encloses(Range) encloses} all ranges * in this range set." />
      <item value="号码总量" />
      <item value="命中" />
      <item value="unknow" />
      <item value="变化的" />
      <item value="String" />
      <item value="mutable" />
      <item value="immutable" />
      <item value="mutate" />
      <item value="mutated" />
      <item value="greet Strings" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="125" />
        <entry key="ENGLISH" value="126" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>